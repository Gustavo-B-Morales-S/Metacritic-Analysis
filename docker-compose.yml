
services:
  mongo:
    container_name: mongo
    image: mongo:latest
    restart: always

    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-database}
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-example}

    ports:
      - "${MONGODB_PORT:-27017}:27017"

    volumes:
      - ./mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5



  mongo-express:
    container_name: mongodb-express
    image: mongo-express
    restart: always

    depends_on:
      mongo:
        condition: service_healthy

    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ROOT_USERNAME:-root}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ROOT_PASSWORD:-example}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_ROOT_USERNAME:-root}:${MONGODB_ROOT_PASSWORD:-example}@mongo:27017/
      ME_CONFIG_BASICAUTH: ${MONGODB_EXPRESS_AUTH:-false}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGODB_EXPRESS_USER:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGODB_EXPRESS_PASSWORD:-password}

    ports:
      - "${MONGODB_EXPRESS_PORT:-8001}:8081"


  # app:
  #   container_name: python-app
  #   build: .
  #   restart: unless-stopped

  #   depends_on:
  #     mongo:
  #       condition: service_healthy

  #   environment:
  #     MONGODB_HOST: mongo
  #     MONGODB_DATABASE: ${MONGODB_DATABASE}
  #     MONGODB_USERNAME: ${MONGODB_USERNAME}
  #     MONGODB_PASSWORD: ${MONGODB_PASSWORD}
  #     AWS_REGION: ${AWS_REGION}
  #     AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  #     AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  #     S3_BUCKET_NAME: ${S3_BUCKET_NAME}
  #     S3_FOLDER_NAME: ${S3_FOLDER_NAME}

  #   volumes:
  #     - .:/app
